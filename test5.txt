https://github.com/titdaum/test2.git

git init
git remote add origin https://github.com/titdaum/test.git

git pull origin master #지정 해놓은 Repository에서 끌어옵니다.
git status # 현재 git 과의 상태를 check
git add . # 변경된 파일들을 모두 tracking
git commit -m "message" commit을 달아줍니다.
git push origin master #실제로 git에 Push 


Pull에서는
	git pull origin master #지정 해놓은 Repository에서 끌어옵니다.
Push에서는
	git status # 현재 git 과의 상태를 check
	git add . # 변경된 파일들을 모두 tracking
	git commit -m "message" commit을 달아줍니다.
	git push origin master #실제로 git에 Push 

txt 내용을 변경
git status
git add .
git commit -m "내용수정"
git push origin master


-- 가져오기 -------
git init
git remote add origin 주소
git pull origin master
-- 끝...


-----------------
자격증명관리자

git add remote

origin

원격주소 
git push


git remote -v
git log --oneline --graph


분기에는 상향 분기가 없습니다.

참조를 원격에 푸시할 수 없습니다. 먼저 '풀'을 실행하여 병경 내용을 통합하세요

git init
git add README.md
git commit -m "first commit"

git remote add origin https://github.com/titdaum/project.git
git push -u origin master

git push --force




1.git 설치
 가이드 라인
2. vs-code 


==================
vs code
==================
익스텐션
 python
 Live Server
 beautify
 wsl(원격접속프로그램)
 Git History
 Git Lens

F5
Ctrl F5 - 
Ctrl Shift + p =>jupyter notebook


4688b01196d527594beb11af84b2cd967b415949

da2acebe724006aafdab628d7f367748. 다른 기기에서도 설정을 다운받으려면 이 ID를 복사해서 사용하세요.


git 설치
git 다운로드
GIT-SCM.COM
https://github.com/innogovKOR/innogov_suggestion.git
---------------------------------------------
git clone 깃주소 . 복사할 위치
git diff
git add file3.txt
git commit -m "수정작업내용"
git log
git push
git status

git add 수정한 파일1
git add 수정한 파일2
git commit -m "수정작업내용"
git push origin +master
---------------------------------------------


git --version
2.20.1

-----------------------------------------------
# 환경설정 titdaum@nate.com / t96600kjm
git config --global user.name "titdaum"
git config --global user.email "titdaum@nate.com"
-----------------------------------------------
git --help
# 다운로드
git clone 다운로드 주소
-----------------------------------------------
git add 수정한 파일1
git add 수정한 파일2
git commit -m "수정작업내용"
git push origin +master
-----------------------------------------------
git init

git remote set-url origin https://github.com/titdaum/project.git

#####################################
*작업순서별 명령어 정리**
#####################################
-맨 먼저 가입 Github 

- 폴더생성
mkdir [폴더이름]

- Git 저장소 생성 
git init

- 내 정보들 입력 
git config -g user.name "titdaum" 
git config -g user.email "titdaum@nate.com"


- Github 정보 가져오기(초기 또는 Github에서 생성시)
git pull [원격서버주소]

- 폴더 내 변화된 상태 확인
git status 

- 폴더 내 변화 인덱스에 기록(스테이징)
git add [파일명] 또는 -A

- 설명내용 기록적고 캡슐에 담기(HEAD에 반영)
git commit -m “설명내용”

- Github 원격저장소와 연동(별명 origin)
git remote add origin [원격 서버 주소]

- Github 서버에 올리기(리모트저장)
git push -u origin master
------------------------------------------------------
- 브랜치 확인명령(*는 현재위치) 
git branch

- 새 브랜치 만들기
git branch [브랜치이름]

- 브랜치 이동(호텔에서 나갈때 체크아웃 생각)
git checkout [브랜치이름]

- 다른 브랜치와 작업 내용 합치기
git merge [브랜치이름]
